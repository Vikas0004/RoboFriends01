{"version":3,"sources":["Components/searchBox.js","Components/Card.js","Components/cardList.js","Components/scroll.js","Components/ErrorBoundry.js","Container/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchChange","className","type","placeholder","onChange","Card","props","name","email","id","alt","src","CardList","robots","map","user","i","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","filterRobot","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAiBeA,EAfG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAEnB,OACC,8BACC,uBACAC,UAAY,mCACZC,KAAO,OACPC,YAAc,gBACdC,SAAYJ,OCUAK,EAhBF,SAACC,GAAS,IAEhBC,EAAoBD,EAApBC,KAAOC,EAAaF,EAAbE,MAAOC,EAAMH,EAANG,GAEpB,OACC,sBAAKR,UAAY,sDAAjB,UACA,qBAAKS,IAAI,QAAQC,IAAG,+BAA0BF,EAA1B,cACpB,gCACC,6BAAKF,IACL,4BAAIC,WCkCQI,EApBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAClB,OACC,8BAEEA,EAAOC,KAAI,SAACC,EAAKC,GACjB,OACG,cAAC,EAAD,CAEAP,GAAII,EAAOG,GAAGP,GACdF,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHVQ,SCpBCC,EAZA,SAACX,GAEf,OACE,qBAAKY,MAAS,CAACC,UAAY,SAAWC,OAAS,iBAAmBC,OAAS,SAA3E,SACEf,EAAMgB,YCoBIC,E,kDAvBd,WAAYjB,GAAO,IAAD,8BACjB,cAAMA,IACDkB,MAAQ,CACZC,UAAW,GAHK,E,qDAQlB,SAAkBC,EAAMC,GAEvBC,KAAKC,SAAS,CAACJ,UAAW,M,oBAG5B,WAEC,OAAGG,KAAKJ,MAAMC,SAEN,2DAEAG,KAAKtB,MAAMgB,a,GApBOQ,aCqDZC,G,wDA9Cd,aAAc,IAAD,8BACZ,gBAOFC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAACK,YAAcD,EAAME,OAAOC,SAPxC,EAAKZ,MAAQ,CACbX,OAAS,GACTqB,YAAc,IAJH,E,qDAYd,WAAoB,IAAD,OAClBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAvB,GAAI,OAAI,EAAKc,SAAS,CAAChB,OAAOE,S,oBAGpC,WAAS,IAAD,EACwBa,KAAKJ,MAA7BX,EADA,EACAA,OAASqB,EADT,EACSA,YACVO,EAAc5B,EAAO6B,QAAO,SAAAC,GAEhC,OAAOA,EAAMpC,KAAKqC,cAAcC,SAASX,EAAYU,kBAEvD,OAAI/B,EAAOiC,OAOT,sBAAK7C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWD,aAAgB4B,KAAKI,iBAChC,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUnB,OAAU4B,WAVjB,oBAAIxC,UAAY,KAAhB,yB,GA3BQ6B,cCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,8BACC,cAAC,EAAD,QAGFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.04485aab.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) =>{\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<input \r\n\t\t\tclassName = \"pa3 ba b--green bg-lightest-blue\"\r\n\t\t\ttype = \"text\" \r\n\t\t\tplaceholder = \"Search Robots\"\r\n\t\t\tonChange = {searchChange}\r\n\t\t\t/>\t\r\n\t\t</div>\r\n\t\t);\r\n\r\n\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\n// const Card = ({name , email , id})=> you can also use this type of destructuring\r\n\r\nconst Card = (props)=>{\r\n\r\n\tconst{name , email ,id} = props;\r\n\r\n\treturn(\r\n\t\t<div className = \"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n\t\t<img alt=\"photo\" src={`https://robohash.org/${id}?200x200`}/>\r\n\t\t<div>\r\n\t\t\t<h2>{name}</h2>\r\n\t\t\t<p>{email}</p>\r\n\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n// import {robots} from './robots'\r\n\r\n// const CardList = ({robots}) =>{\r\n\r\n// \tconst cardArray = robots.map((user,i)=>{\r\n// \t\treturn(\r\n// \t\t\t<Card \r\n// \t\t\tkey = {i} \r\n// \t\t\tid={robots[i].id} \r\n// \t\t\tname={robots[i].name} \r\n// \t\t\temail={robots[i].email}\r\n// \t\t\t/>\r\n// \t\t\t);\r\n// \t\t})\r\n\r\n// \treturn(\r\n// \t\t<div>\r\n// \t\t\t{cardArray}\r\n// \t\t</div>\r\n// \t\t);\r\n// }\r\n\r\n\r\n// or\r\n\r\nconst CardList = ({robots}) =>{\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\trobots.map((user,i)=>{\r\n\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<Card \r\n\t\t\t\t\t\t\tkey = {i} \r\n\t\t\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\t\t\temail={robots[i].email}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\r\n\treturn(\r\n\t\t\t<div style = {{overflowY : 'scroll' , border : '1px solid grey' , height : '800px'}}>\r\n\t\t\t\t{props.children}\r\n\t\t\t</div>\r\n\t\t)\r\n\r\n\r\n}\r\n\r\n\r\nexport default Scroll;","import React , { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError : false\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tcomponentDidCatch(error,info)\r\n\t{\r\n\t\tthis.setState({hasError : true})\r\n\t}\r\n\r\nrender(){\r\n\r\n\tif(this.state.hasError)\r\n\t{\r\n\t\treturn <h1>Oooops!! this is not good</h1>\r\n\t}\r\n\t\treturn this.props.children;\r\n}\r\n\r\n}\r\nexport default ErrorBoundry;","import React , { Component } from 'react';\r\nimport SearchBox from '../Components/searchBox';\r\nimport CardList from '../Components/cardList';\r\nimport Scroll from '../Components/scroll';\r\nimport ErrorBoundry from '../Components/ErrorBoundry';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\t\tthis.state = {\r\n\t\t\trobots : [],\r\n\t\t\tsearchfield : ''\r\n\t\t\t}\r\n\t}\r\n\r\nonSearchChange = (event) => {\r\n\tthis.setState({searchfield : event.target.value})\r\n}\r\n\r\ncomponentDidMount(){\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t.then(response => response.json())\r\n\t.then(user => this.setState({robots:user}));\r\n}\r\n\r\n\trender(){\r\n\t\tconst {robots , searchfield} = this.state;\r\n\t\tconst filterRobot = robots.filter(robot =>\r\n\t\t{\r\n\t\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n\t\t})\r\n\t\tif(!robots.length)\r\n\t\t{\r\n\t\t\treturn <h1 className = 'tc'>Loading</h1>\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn(\r\n\t\t\t\t<div className=\"tc\">\r\n\t\t\t\t\t<h1 className=\"f1\">RoboFriends</h1>\r\n\t\t\t\t\t<SearchBox searchChange = {this.onSearchChange}/>\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t\t\t<CardList robots = {filterRobot} />\r\n\t\t\t\t\t\t</ErrorBoundry>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t);\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport default App; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Container/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<div>\n  \t\t<App/>\n  \t</div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}